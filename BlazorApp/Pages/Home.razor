@page "/"
@inject HttpClient Http

<PageTitle>Artists</PageTitle>

<h1>Artists</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (artists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><a class="btn btn-primary" href="/create">Add new</a></p>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in artists)
            {
                <tr>
                    <td>@artist.Id</td>
                    <td>@artist.Name</td>
                    <td>
                        <a href="/edit/@artist.Id" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger" @onclick="() => Delete(artist.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Artist>? artists;

    protected override async Task OnInitializedAsync()
    {
        artists = await Http.GetFromJsonAsync<List<Artist>>("api/artists");
    }

    private async Task Delete(int id)
    {
        var response = await Http.DeleteAsync($"api/artists/{id}");

        if (response.IsSuccessStatusCode)
        {
            var artistToRemove = artists?.FirstOrDefault(a => a.Id == id);
            if (artistToRemove != null)
            {
                artists?.Remove(artistToRemove);
            }
        }
        else
        {
            Console.WriteLine($"Kustutamine ebaõnnestus: {response.StatusCode}");
        }
    }

    public class Artist
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
    }
}
